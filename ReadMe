一：图片加载框架主要流程
1、三级缓存（内存缓存--->本地缓存--->磁盘缓存）
当我们的APP中想要加载某张图片的过程
先去LruCache中寻找图片，如果LruCache中有，则直接取出来使用，
如果LruCache中没有，则去文件系统中寻找，如果有则取出来使用，同时将图片添加到LruCache中，
如果没有，则连接网络从网上下载图片。图片下载完成后，将图片通过DiskLruCache缓存到本地，然后放到LruCache中。

从网络下载图片--保存到磁盘中--展示出来

问题：
1）网络下载完成之后，通过什么方式去通知磁盘缓存、内存缓存？？
https://www.jianshu.com/p/f9cfbea586c2

2) 如何和Activity的生命周期绑定在一起？？（如何和图片加载结合起来）
通过Activity 的FragmentManager,绑定一个空的RequestManagerFragment(内部初始化LifecycleListener),同步Activity 的生命周期。

3）图片放缩、加载长图
https://blog.csdn.net/lijinweii/article/details/77717540
https://blog.csdn.net/jingzz1/article/details/84663067
MotionEvent详解：https://blog.csdn.net/vicwudi/article/details/82084965
Matrix讲解：https://blog.csdn.net/cquwentao/article/details/51445269
技术点：Matrix，Scroller，

4）加载长图：BitmapRegionDecoder

二：使用Kotlin 作为开发语言 熟练掌握基本用法
1、Java和Kotlin混用：https://www.jianshu.com/p/9220227cdfb3
2、kotlin 中替代findViewById： https://www.jianshu.com/p/1121c191f4c6
https://www.jianshu.com/p/e60aa23ab63f
3、kotlin 中点击事件 https://www.jianshu.com/p/d057ac23eed0
4、JsonToKotlin插件 将Json 格式化

5、Kotlin重构如何兼容原先的ButterKnife、EventBus3.1： https://www.jianshu.com/p/033cca6b615d

6、kotlin的NULL 检查机制
有两种处理方式，字段后加!!像Java一样抛出空异常，另一种字段后加?可不做处理返回值为 null或配合?:做空判断处理；

7、作用域函数：let、run、with、apply 以及 also。在一个对象上执行一个代码块；
每个作用域函数之间有两个主要区别：引用上下文对象的方式、返回值

8、协程是轻量级的线程

9、单例模式 https://www.jianshu.com/p/5797b3d0ebd0

10、委托

三：单元测试

四、APP 抓包
https://www.jianshu.com/p/8034b451585b

五、简单实现GreenDao--根据GreenDao的设计思路简单事件对象型数据库
GreenDao是一个对象关系映射（ORM）的开源框架，是一种将对象层次结构映射成关系型结构的方法。

1、注解的使用：https://www.jianshu.com/p/de13b00042d6
2、泛型、工厂设计模式


四：android  保存本地密钥实践：https://www.jianshu.com/p/a24353ce977a
在登录模块中需要对验证码、密码进行加密处理，非对称加密（公钥、私钥），防止明文数据传输，数据泄漏。
客户端公钥如何保存？使用so库文件，通过jni方式进行验证，通过签名信息校验调用者是否正确。
